# Default values for camunda-optimize.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

general:
  debug: true
  replicaCount: 2
  nameOverride: ""
  fullnameOverride: ""

image:
  repository: registry.camunda.cloud/optimize-ee/optimize
  tag: latest
  pullPolicy: IfNotPresent
  pullSecrets:
    - name: camunda-reg-cred

elasitc:
  external:
    enabled: true
    credentialsSecertName: "elastic-search-credentials"
    host: "elasticsearch-master"
    port: "9200"

camunda:
  engine:
    name: "default"
    webappsEnabled: true
    restUrl: "http://10.1.0.40:8080/engine-rest"
    webappsUrl: "http://10.1.0.40:8080/camunda"
    importEnabled: true
    eventImportEnabled: true
    authentication:
      enabled: false
      user: ''
      password: ''

service:
  type: ClusterIP
  port: 8090
  portName: http

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# See link below to install nginx controller
# https://artifacthub.io/packages/helm/bitnami/nginx-ingress-controller

ingress:
  enabled: true
  annotations: {
      nginx.ingress.kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/affinity: "cookie",
      nginx.ingress.kubernetes.io/affinity-mode: "persistent",
      nginx.ingress.kubernetes.io/session-cookie-expires: "172800",
      nginx.ingress.kubernetes.io/session-cookie-max-age: "172800",
    }
    # see more config options https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: optimize.127.0.0.1.nip.io
      paths: ["/"]
  tls: []
  #  - secretName: camunda-optimize-tls
  #    hosts:
  #      - camunda-optimize.local

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # If you do want to specify resources, uncomment the following lines,
  # adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
